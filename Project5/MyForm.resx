<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhJAASAIcAAAAAAAAAMwAAZgAAmQAAzAAA/wArAAArMwArZgArmQArzAAr/wBVAABVMwBVZgBV
        mQBVzABV/wCAAACAMwCAZgCAmQCAzACA/wCqAACqMwCqZgCqmQCqzACq/wDVAADVMwDVZgDVmQDVzADV
        /wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMrADMrMzMrZjMrmTMrzDMr/zNVADNV
        MzNVZjNVmTNVzDNV/zOAADOAMzOAZjOAmTOAzDOA/zOqADOqMzOqZjOqmTOqzDOq/zPVADPVMzPVZjPV
        mTPVzDPV/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YrAGYrM2YrZmYrmWYrzGYr
        /2ZVAGZVM2ZVZmZVmWZVzGZV/2aAAGaAM2aAZmaAmWaAzGaA/2aqAGaqM2aqZmaqmWaqzGaq/2bVAGbV
        M2bVZmbVmWbVzGbV/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5krAJkrM5krZpkr
        mZkrzJkr/5lVAJlVM5lVZplVmZlVzJlV/5mAAJmAM5mAZpmAmZmAzJmA/5mqAJmqM5mqZpmqmZmqzJmq
        /5nVAJnVM5nVZpnVmZnVzJnV/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wrAMwr
        M8wrZswrmcwrzMwr/8xVAMxVM8xVZsxVmcxVzMxV/8yAAMyAM8yAZsyAmcyAzMyA/8yqAMyqM8yqZsyq
        mcyqzMyq/8zVAMzVM8zVZszVmczVzMzV/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A
        //8rAP8rM/8rZv8rmf8rzP8r//9VAP9VM/9VZv9Vmf9VzP9V//+AAP+AM/+AZv+Amf+AzP+A//+qAP+q
        M/+qZv+qmf+qzP+q///VAP/VM//VZv/Vmf/VzP/V////AP//M///Zv//mf//zP///wAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAJAASAAAIZwAB7BtIsKDBgwgPChSYsKFDgwsJ
        Apj4sOFEhvswRhyIsaLEjxklXhxJsqTJkgpBelTZ8aTLlyc5rpwpUyVNhx1r3kyYU+ROiD2B/gy5kuJM
        ozQvQiyodChHl05xEo1qcSpVhE09BgQAOw==
</value>
  </data>
</root>